server.port : 8081


# h2 [ ??? ???? DB ( ??? ?? ) / ???? = ??? ????? ? ??? ]
#spring.h2.console.enabled = true
# h2 JDBC URL   [ ? ??? colosle ?? jdbc url ?? ]
#spring.datasource.url= jdbc:h2:mem:mydb
# h2 username , password [  ? ???    username= sa  , password=?? ]
#spring.datasource.username = admin
#spring.datasource.password = 1234


#RDS ?? : ??? ????(??? ? ??)
#spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
#spring.datasource.url = jdbc:mysql://{?????}:{????}/springweb(???(DB) ??/?? ???)
#spring.datasource.username ={??? ??}
#spring.datasource.password ={??? ????}


#mysql
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/springweb
spring.datasource.username = root
spring.datasource.password = 1234

#jpa
spring.jpa.show_sql = true
spring.jpa.hibernate.ddl-auto = update
# spring.jpa.hibernate.ddl-auto = create
    #update: ???? ??? ??, ??? ??
    #create: ????

#oauth2 ???
    #1. 네이버 어플리케이션 발급받은 client-id / client-secret
spring.security.oauth2.client.registration.naver.client-id=EfBt1ugz0DgmgKx0U2rz
spring.security.oauth2.client.registration.naver.client-secret=JLMr3XZNAl
    #2. 요청 url (콜백 url) http://localhost:8081/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
    #3. 인증 토큰 타입
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
    #4. 동의항목[가져올 변수들]
spring.security.oauth2.client.registration.naver.scope = name , email 
    #5. 클라이언트 이름
spring.security.oauth2.client.registration.naver.client-name= naver
    #6. 인증 url
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
    #7. 토큰 url
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
    #8. 회원정보 url
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
    #9.
spring.security.oauth2.client.provider.naver.user-name-attribute=response


# 카카오
    #1. 카카오 개발자 어플리케이션 rest api
spring.security.oauth2.client.registration.kakao.client-id=3dcc9be91ecb766573ecd5f39b75adec
spring.security.oauth2.client.registration.kakao.client-secret=UeZdJjR2pL2soGjRbPsuMAouYwBYkl3o

spring.security.oauth2.client.registration.kakao.scope = profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
    #2. 클라이언트 이름 네이버 -> 카카오로 변경
spring.security.oauth2.client.registration.kakao.client-name=kakao
    #3. provider들의 주소 -> 네이버 -> 카카오 변경
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=kakao_account
    #4. 카카오는 http 요청 메소드 : post만 가능
spring.security.oauth2.client.registration.kakao.client-authentication-method=post

#SMTP 인증 설정
spring.mail.host=smtp.naver.com
spring.mail.port=587
spring.mail.username=보내는사람
spring.mail.password=보내는사람
#보내는 사람의 회원 검증
spring.mail.properties.mail.smtp.auth=true
#이메일 전송시 사용되는 보안 프로토콜 : TLS(네이버가 TLS 필요)
spring.mail.properties.mail.smtp.starttls=true






